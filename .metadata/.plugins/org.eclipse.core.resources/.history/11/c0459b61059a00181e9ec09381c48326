package com.internousdev.ecsite.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import com.internousdev.ecsite.util.DBConnector;
import com.internousdev.ecsite.dto.MyPageDTO;
import java.sql.ResultSet;

public class MyPageDAO {
		private DBConnector dbConnector = new DBConnector();
		private Connection connection = dbConnector.getConnection();
		public ArrayList<MyPageDTO>getMyPageUserInfo
		(String item_transaction_id, String user_master_id)throws SQLException {
			ArrayList<MyPageDTO>myPageDTO = new ArrayList<MyPageDTO>();
			String sql=
					"SELECT ubit.id, iit.item_name, ubit.total_price, ubit.total_count, " +
					"ubit.pay, ubit.insert_date FROM user_buy_item_transaction ubit " +
					"LEFT JOIN item_info_transaction iit ON ubit.item_transaction_id = iit.id " +
					"WHERE ubit.item_transaction_id = ? AND ubit.user_master_id = ? " +
					"ORDER BY insert_date DESC";


		}
		private DateUtil dateUtil = new DateUtil();
		private String sql = "INSERT INTO user_buy_item_transaction "
				             +"(item_transaction_id, total_price,total_count, user_master_id, pay,insert_date) values(?,?,?,?,?,?)";
							public void buyItemInfo(String item_transaction_id, String user_master_id,
									String total_price, String total_count, String pay) throws SQLException{
								try{
									PreparedStatement preparedStatement = connection.prepareStatement(sql);
									preparedStatement.setString(1, item_transaction_id);
									preparedStatement.setString(2, total_price);
									preparedStatement.setString(3, total_count);
									preparedStatement.setString(4, user_master_id);
									preparedStatement.setString(5, pay);
									preparedStatement.setString(6, dateUtil.getDate());
									preparedStatement.execute();
								} catch(Exception e){
									e.printStackTrace();
								}finally{
									connection.close();
								}
							}
}
